<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凸凸</title>
  
  <subtitle>凸凸的知识库</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chenyuanchn.github.io/"/>
  <updated>2018-03-22T02:00:23.883Z</updated>
  <id>http://chenyuanchn.github.io/</id>
  
  <author>
    <name>凸凸</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springboot(一)：helloworld</title>
    <link href="http://chenyuanchn.github.io/springboot/1.1-spring-boot-hello-world/"/>
    <id>http://chenyuanchn.github.io/springboot/1.1-spring-boot-hello-world/</id>
    <published>2018-03-20T16:00:00.000Z</published>
    <updated>2018-03-22T02:00:23.883Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节，你将学会：</p><ul><li>springboot项目初始化</li><li>springboot创建接口</li><li>如何访问springboot项目接口</li></ul><h2 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h2><ol><li>使用idea开发，<a href="https://www.jetbrains.com/idea/">下载地址</a></li><li>打开idea，点击New Project</li><li>选择Spring Initializr,点击Next</li><li>填写Group、Artifact,点击Next</li><li>选择Web,勾选Web,点击Next</li><li>选择项目路径,点击Finish</li></ol><h2 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h2><p>在DemoApplication同级下创建HelloWorldController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloWorld</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello, World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="../../images/springboot/1.png" alt=""></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><ol><li>使用run或者debug启动项目</li><li>默认是8080 (http)端口</li><li>访问 <a href="http://localhost:8080/">http://localhost:8080/</a> 看到效果</li></ol><p><img src="../../images/springboot/2.png" alt=""></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><a href="https://github.com/chenyuanchn/spring-boot-demo">该项目在github地址</a></p><h2 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节，你将学会：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;springboot项目初始化&lt;/li&gt;
&lt;li&gt;springboot创建接口&lt;/li&gt;
&lt;li&gt;如何访问springboot项目接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;项目创建&quot;&gt;&lt;a href=&quot;#项目创建&quot; clas
      
    
    </summary>
    
      <category term="springboot" scheme="http://chenyuanchn.github.io/categories/springboot/"/>
    
    
      <category term="springboot" scheme="http://chenyuanchn.github.io/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发问题汇总</title>
    <link href="http://chenyuanchn.github.io/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/1.1-mini-program-init/"/>
    <id>http://chenyuanchn.github.io/微信小程序/1.1-mini-program-init/</id>
    <published>2018-03-19T16:00:00.000Z</published>
    <updated>2018-03-27T06:57:32.394Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>环境搭建开发都按<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/index.html">微信小程序官方文档</a>一步一步来</p><h2 id="子页面退回父页面时的数据传递问题"><a href="#子页面退回父页面时的数据传递问题" class="headerlink" title="子页面退回父页面时的数据传递问题"></a>子页面退回父页面时的数据传递问题</h2><ol><li><p>直接设置上一页数据 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pages = getCurrentPages();<span class="comment">//获取当前页面栈</span></span><br><span class="line"><span class="keyword">var</span> currentPage = pages[pages.length - <span class="number">1</span>];<span class="comment">//当前页面</span></span><br><span class="line"><span class="keyword">var</span> prevPage = pages[pages.length - <span class="number">2</span>];<span class="comment">//上一个页面</span></span><br><span class="line"></span><br><span class="line">prevPage.setData(&#123;</span><br><span class="line">  data: yourData</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回上一个页面后可以发现数据已经设置进去了</span></span><br></pre></td></tr></table></figure></li><li><p>使用全局变量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wx.setStorageSync(<span class="string">'data'</span>, yourData);<span class="comment">//存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回上一个页面</span></span><br><span class="line"></span><br><span class="line">wx.getStorageSync(<span class="string">'data'</span>);<span class="comment">//取</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="首页面tabBar直接触发事件"><a href="#首页面tabBar直接触发事件" class="headerlink" title="首页面tabBar直接触发事件"></a>首页面tabBar直接触发事件</h2><p>当我听到这个需求的时候，我查了下微信api，并没有提供方法（截止到2018/3/27)，所以我是拒绝的，但设计要做。。。行吧，好吧，可以</p><p>需求：点击tabBar中间的图标可以直接跳转一个页面，而不是在tabbar上切换</p><p>实现方式:</p><ol><li>用app.globalData.checkTab的变量记录之前选择的tabBar</li><li>先进入tabBar这个图标对应的空白页面</li><li>在onShow里判断打开真正要的页面，在第二次onShow里回到app.globalData.checkTab的变量记录的位置</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在tabBar对应的这几个页面增加记录选择的tabBar</span></span><br><span class="line">  onShow: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    app.globalData.checkTab = <span class="string">'../index/index'</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//直接触发页面</span></span><br><span class="line"><span class="keyword">const</span> app = getApp()</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    flag: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onShow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'onShow'</span>)</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.data.flag) &#123;</span><br><span class="line">      wx.navigateTo(&#123;</span><br><span class="line">        url: <span class="string">'../publish/publish'</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        flag: <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        flag: <span class="literal">false</span></span><br><span class="line">      &#125;)</span><br><span class="line">      wx.switchTab(&#123;</span><br><span class="line">        url: app.globalData.checkTab</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>同样，这个方式还能实现例如点击直接触发某个微信api</p><h2 id="待完善"><a href="#待完善" class="headerlink" title="待完善"></a>待完善</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;环境搭建开发都按&lt;a href=&quot;https://mp.weixin.qq.com/debug/wxadoc/dev/ind
      
    
    </summary>
    
      <category term="微信小程序" scheme="http://chenyuanchn.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://chenyuanchn.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>https阿里云申请及服务器nginx配置</title>
    <link href="http://chenyuanchn.github.io/https/1.1-https-init/"/>
    <id>http://chenyuanchn.github.io/https/1.1-https-init/</id>
    <published>2018-03-15T16:00:00.000Z</published>
    <updated>2018-03-21T07:32:07.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置解析域名及对应的ip地址"><a href="#配置解析域名及对应的ip地址" class="headerlink" title="配置解析域名及对应的ip地址"></a>配置解析域名及对应的ip地址</h2><p>设置好域名和对应的ip服务器地址</p><p><img src="../../images/https/1.jpg" alt=""></p><p><img src="../../images/https/2.png" alt=""></p><h2 id="购买配置证书"><a href="#购买配置证书" class="headerlink" title="购买配置证书"></a>购买配置证书</h2><p><img src="../../images/https/3.png" alt=""></p><p>选择symantec一个域名免费型</p><p><img src="../../images/https/4.png" alt=""></p><p><img src="../../images/https/5.png" alt=""></p><p>购买后 填写申请人信息 选择dns（dns和文件二选一）<br>申请成功后下载nginx证书（zip里包含xx.pem和xx.key两个文件）<br>把这两个文件放入域名对应的ip服务器的nginx目录下</p><p>在nginx的conf文件里配置https默认端口443对应的tomcat端口</p><h2 id="nginx相关配置"><a href="#nginx相关配置" class="headerlink" title="nginx相关配置"></a>nginx相关配置</h2><p><img src="../../images/https/6.png" alt=""><br><img src="../../images/https/7.png" alt=""></p><p>也可以在default.conf里配置http（默认80端口）对应的tomcat，在ssl.conf里配置https（默认443端口）对应的tomcat</p><p><img src="../../images/https/8.png" alt=""><br><img src="../../images/https/9.png" alt=""><br><img src="../../images/https/10.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;配置解析域名及对应的ip地址&quot;&gt;&lt;a href=&quot;#配置解析域名及对应的ip地址&quot; class=&quot;headerlink&quot; title=&quot;配置解析域名及对应的ip地址&quot;&gt;&lt;/a&gt;配置解析域名及对应的ip地址&lt;/h2&gt;&lt;p&gt;设置好域名和对应的ip服务器地址&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="https" scheme="http://chenyuanchn.github.io/categories/https/"/>
    
    
      <category term="https" scheme="http://chenyuanchn.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>cordova安卓插件开发</title>
    <link href="http://chenyuanchn.github.io/cordova/1.1-cordova-plugin/"/>
    <id>http://chenyuanchn.github.io/cordova/1.1-cordova-plugin/</id>
    <published>2018-03-15T16:00:00.000Z</published>
    <updated>2018-03-22T03:02:36.136Z</updated>
    
    <content type="html"><![CDATA[<p>之前是有道记录的，而且没有很好的整理，先移过来，后面完善</p><p>针对cordova安卓插件的开发，这里给出例子，实现震动和提示两个小功能</p><h2 id="plugin-xml内容"><a href="#plugin-xml内容" class="headerlink" title="plugin.xml内容"></a>plugin.xml内容</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span> <span class="attr">xmlns</span>=<span class="string">"http://apache.org/cordova/ns/plugins/1.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">"com.xc.sep"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">version</span>=<span class="string">"0.0.1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Sep<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">js-module</span> <span class="attr">src</span>=<span class="string">"www/Sep.js"</span> <span class="attr">name</span>=<span class="string">"Sep"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">clobbers</span> <span class="attr">target</span>=<span class="string">"Sep"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">js-module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">"android"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source-file</span> <span class="attr">src</span>=<span class="string">"src/android/Sep.java"</span> <span class="attr">target-dir</span>=<span class="string">"src/com/xc/sep"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">config-file</span> <span class="attr">target</span>=<span class="string">"res/xml/config.xml"</span> <span class="attr">parent</span>=<span class="string">"/*"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">feature</span> <span class="attr">name</span>=<span class="string">"Sep"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"android-package"</span> <span class="attr">value</span>=<span class="string">"com.xc.sep.Sep"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">feature</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">config-file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">config-file</span> <span class="attr">target</span>=<span class="string">"AndroidManifest.xml"</span> <span class="attr">parent</span>=<span class="string">"/*"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.VIBRATE"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">config-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">platform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Sep-js内容"><a href="#Sep-js内容" class="headerlink" title="Sep.js内容"></a>Sep.js内容</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'cordova/exec'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Sep = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">Sep.prototype.showVibration = <span class="function"><span class="keyword">function</span>(<span class="params">success, error</span>) </span>&#123;</span><br><span class="line">    exec(success, error, <span class="string">'Sep'</span>, <span class="string">'showVibration'</span>, []);</span><br><span class="line">&#125;;</span><br><span class="line">Sep.prototype.showToast=<span class="function"><span class="keyword">function</span>(<span class="params">content,type</span>)</span>&#123;</span><br><span class="line">    exec(<span class="literal">null</span>, <span class="literal">null</span>, <span class="string">"Sep"</span>, <span class="string">"showToast"</span>, [content,type]);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sep = <span class="keyword">new</span> Sep();</span><br><span class="line"><span class="built_in">module</span>.exports = sep;</span><br></pre></td></tr></table></figure><h2 id="Sep-java内容"><a href="#Sep-java内容" class="headerlink" title="Sep.java内容"></a>Sep.java内容</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xc.sep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.cordova.CallbackContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.cordova.CordovaInterface;</span><br><span class="line"><span class="keyword">import</span> org.apache.cordova.CordovaPlugin;</span><br><span class="line"><span class="keyword">import</span> org.apache.cordova.CordovaWebView;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.media.AudioManager;</span><br><span class="line"><span class="keyword">import</span> android.os.Vibrator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sep</span> <span class="keyword">extends</span> <span class="title">CordovaPlugin</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(CordovaInterface cordova, CordovaWebView webView)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.initialize(cordova, webView);</span><br><span class="line">        Context context = <span class="keyword">this</span>.cordova.getActivity().getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String action, JSONArray args, CallbackContext callbackContext)</span> <span class="keyword">throws</span> JSONException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"showVibration"</span>.equals(action)) &#123;</span><br><span class="line">            showVibration();</span><br><span class="line">            callbackContext.success(<span class="string">"success"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"showToast"</span>.equals(action)) &#123;</span><br><span class="line">            showToast(args.getString(<span class="number">0</span>), args.getInt(<span class="number">1</span>));</span><br><span class="line">            callbackContext.success(<span class="string">"success"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        callbackContext.error(<span class="string">"error 没有该方法"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showVibration</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        CordovaInterface cordova = <span class="keyword">this</span>.cordova;  </span><br><span class="line">        AudioManager manager = (AudioManager) <span class="keyword">this</span>.cordova.getActivity().getSystemService(Context.AUDIO_SERVICE);</span><br><span class="line">        <span class="keyword">if</span> (manager.getRingerMode() != AudioManager.RINGER_MODE_SILENT) &#123;</span><br><span class="line">            Vibrator vibrator = (Vibrator) <span class="keyword">this</span>.cordova.getActivity().getSystemService(Context.VIBRATOR_SERVICE);</span><br><span class="line">            vibrator.vibrate(<span class="number">1000</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(String text,<span class="keyword">int</span> type)</span></span>&#123;  </span><br><span class="line">            CordovaInterface cordova = <span class="keyword">this</span>.cordova;  </span><br><span class="line">            android.widget.Toast.makeText(cordova.getActivity(), text, type).show();  </span><br><span class="line">     &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>add后面是你的插件文件夹路径（本地或github上等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add  C:\Users\Administrator\Desktop\Sep</span><br></pre></td></tr></table></figure><h2 id="js中调用"><a href="#js中调用" class="headerlink" title="js中调用"></a>js中调用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sep.showVibration(<span class="function"><span class="keyword">function</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">                     alert(<span class="string">"showVibration :"</span>+message);</span><br><span class="line">                &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">                     alert(<span class="string">"showVibration :"</span>+message);</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Sep.showToast(<span class="string">"测试提示2秒"</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="在java调用js的两种方式"><a href="#在java调用js的两种方式" class="headerlink" title="在java调用js的两种方式"></a>在java调用js的两种方式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PluginResult result = <span class="keyword">new</span> PluginResult(PluginResult.Status.OK,返回内容);</span><br><span class="line">result.setKeepCallback(<span class="keyword">true</span>);<span class="comment">//调用后还能再次使用Callback</span></span><br><span class="line">callback.sendPluginResult(result);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">String format = <span class="string">"cordova.plugins.Easemob.onMessageReadAckReceivedInAndroidCallback(%s);"</span>;</span><br><span class="line">JSONArray jSONArray = <span class="keyword">new</span> JSONArray();</span><br><span class="line">packageJSONArray(arg0,jSONArray);</span><br><span class="line"><span class="keyword">final</span> String js = String.format(format, jSONArray);</span><br><span class="line">cordova.getActivity().runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> webView.loadUrl(<span class="string">"javascript:"</span> + js);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前是有道记录的，而且没有很好的整理，先移过来，后面完善&lt;/p&gt;
&lt;p&gt;针对cordova安卓插件的开发，这里给出例子，实现震动和提示两个小功能&lt;/p&gt;
&lt;h2 id=&quot;plugin-xml内容&quot;&gt;&lt;a href=&quot;#plugin-xml内容&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="cordova" scheme="http://chenyuanchn.github.io/categories/cordova/"/>
    
    
      <category term="cordova" scheme="http://chenyuanchn.github.io/tags/cordova/"/>
    
  </entry>
  
  <entry>
    <title>cordova插件：地图定位和导航</title>
    <link href="http://chenyuanchn.github.io/cordova/1.2-cordova-plugin-map/"/>
    <id>http://chenyuanchn.github.io/cordova/1.2-cordova-plugin-map/</id>
    <published>2017-09-25T16:00:00.000Z</published>
    <updated>2018-03-20T03:10:42.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><p>在手机上实现地图展示和定位信息，并可以添加标记在地图上，点击标记显示详情等。所以地图用web（方便拓展），定位用原生插件（浏览器定位不准确）</p><h2 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h2><p>使用百度或者高德的jsapi，在项目中导入对应的js（都需要申请对应的开发者获取key）</p><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><ul><li><p>ios使用官方插件：cordova-plugin-geolocation</p></li><li><p>安卓使用百度定位插件：<a href="https://github.com/liangzhenghui/cordova-qdc-baidu-location">https://github.com/liangzhenghui/cordova-qdc-baidu-location</a></p></li><li><p>安卓使用高德定位插件：<a href="https://github.com/tomisacatyet/Cordova-AMap4Locaton">https://github.com/tomisacatyet/Cordova-AMap4Locaton</a></p></li></ul><h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h2><p><a href="https://github.com/huangliop/cordova-baidu-navigator">https://github.com/huangliop/cordova-baidu-navigator</a></p><h2 id="有空完善"><a href="#有空完善" class="headerlink" title="有空完善"></a>有空完善</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;实现功能&quot;&gt;&lt;a href=&quot;#实现功能&quot; class=&quot;headerlink&quot; title=&quot;实现功能&quot;&gt;&lt;/a&gt;实现功能&lt;/h2&gt;&lt;p&gt;在手机上实现地图展示和定位信息，并可以添加标记在地图上，点击标记显示详情等。所以地图用web（方便拓展），定位用原生插件（浏
      
    
    </summary>
    
      <category term="cordova" scheme="http://chenyuanchn.github.io/categories/cordova/"/>
    
    
      <category term="cordova" scheme="http://chenyuanchn.github.io/tags/cordova/"/>
    
  </entry>
  
  <entry>
    <title>ionic3(一)：入门篇</title>
    <link href="http://chenyuanchn.github.io/ionic/1.1-ionic3-init/"/>
    <id>http://chenyuanchn.github.io/ionic/1.1-ionic3-init/</id>
    <published>2017-09-12T16:00:00.000Z</published>
    <updated>2018-03-22T02:08:29.765Z</updated>
    
    <content type="html"><![CDATA[<p>通过本节，你将学会：</p><ul><li>ionic3项目初始化</li><li>ionic3项目在电脑运行</li><li>ionic3项目在安卓手机运行</li></ul><h2 id="ionic组成"><a href="#ionic组成" class="headerlink" title="ionic组成"></a>ionic组成</h2><ul><li>cordova（js调用原生）</li><li>angular（js框架）</li><li>ionic自身封装了适应移动端的常用组件和样式</li></ul><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ol><li>安装<a href="https://nodejs.org/zh-cn/">nodejs</a></li><li><p>安装cordova和ionic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cordova ionic</span><br></pre></td></tr></table></figure></li><li><p>创建项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic start myApp tabs</span><br></pre></td></tr></table></figure><p> myApp:项目名 tabs:模板(blank、tabs、sidemenu、super等)</p></li><li><p>创建完会自动npm install,速度慢的话取消了用cnpm</p></li><li>运行项目（中间有提示更新就一直y确认到底）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myApp</span><br><span class="line">ionic serve</span><br></pre></td></tr></table></figure></li></ol><h2 id="在安卓机子上跑"><a href="#在安卓机子上跑" class="headerlink" title="在安卓机子上跑"></a>在安卓机子上跑</h2><ol><li>下载<a href="http://www.androiddevtools.cn/">SDK Tools</a>，配置环境变量ANDROID_HOME，并下载好对应android sdk build-tools,sdk platform等</li><li>运行以下指令（会自动添加安卓平台）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic cordova run android</span><br></pre></td></tr></table></figure></li></ol><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><ul><li>如果有does not have Api.js这种报错，删了node_modules重新使用npm install，别使用cnpm install</li><li>有些情况还是需要科学上网的</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过本节，你将学会：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ionic3项目初始化&lt;/li&gt;
&lt;li&gt;ionic3项目在电脑运行&lt;/li&gt;
&lt;li&gt;ionic3项目在安卓手机运行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;ionic组成&quot;&gt;&lt;a href=&quot;#ionic组成&quot; class=
      
    
    </summary>
    
      <category term="ionic" scheme="http://chenyuanchn.github.io/categories/ionic/"/>
    
    
      <category term="ionic3" scheme="http://chenyuanchn.github.io/tags/ionic3/"/>
    
  </entry>
  
  <entry>
    <title>ionic3(二)：插件篇</title>
    <link href="http://chenyuanchn.github.io/ionic/1.2-ionic3-plugin/"/>
    <id>http://chenyuanchn.github.io/ionic/1.2-ionic3-plugin/</id>
    <published>2017-09-12T16:00:00.000Z</published>
    <updated>2018-03-21T07:32:23.527Z</updated>
    
    <content type="html"><![CDATA[<h2 id="插件是什么"><a href="#插件是什么" class="headerlink" title="插件是什么"></a>插件是什么</h2><p>插件就是使用js调用原生的设备</p><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><h3 id="默认就安装好的插件"><a href="#默认就安装好的插件" class="headerlink" title="默认就安装好的插件"></a>默认就安装好的插件</h3><p><img src="../../images/plugin/plugin.png" alt=""></p><ul><li>cordova-plugin-whitelist:白名单插件，跨域这些都要用到</li></ul><h3 id="支付宝插件"><a href="#支付宝插件" class="headerlink" title="支付宝插件"></a>支付宝插件</h3><p><a href="https://github.com/chenyuanchn/cordova-plugin-alipay">https://github.com/chenyuanchn/cordova-plugin-alipay</a></p><h3 id="微信插件"><a href="#微信插件" class="headerlink" title="微信插件"></a>微信插件</h3><p><a href="https://github.com/xu-li/cordova-plugin-wechat">https://github.com/xu-li/cordova-plugin-wechat</a></p><h3 id="有空完善"><a href="#有空完善" class="headerlink" title="有空完善"></a>有空完善</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;插件是什么&quot;&gt;&lt;a href=&quot;#插件是什么&quot; class=&quot;headerlink&quot; title=&quot;插件是什么&quot;&gt;&lt;/a&gt;插件是什么&lt;/h2&gt;&lt;p&gt;插件就是使用js调用原生的设备&lt;/p&gt;
&lt;h2 id=&quot;常用插件&quot;&gt;&lt;a href=&quot;#常用插件&quot; class=&quot;h
      
    
    </summary>
    
      <category term="ionic" scheme="http://chenyuanchn.github.io/categories/ionic/"/>
    
    
      <category term="ionic3" scheme="http://chenyuanchn.github.io/tags/ionic3/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到凸凸的知识库</title>
    <link href="http://chenyuanchn.github.io/index/"/>
    <id>http://chenyuanchn.github.io/index/</id>
    <published>2016-12-31T16:00:00.000Z</published>
    <updated>2018-03-20T03:10:42.286Z</updated>
    
    <content type="html"><![CDATA[<p>这是凸凸的知识库站点，<a href="https://github.com/chenyuanchn">github地址</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是凸凸的知识库站点，&lt;a href=&quot;https://github.com/chenyuanchn&quot;&gt;github地址&lt;/a&gt;。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
