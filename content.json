{"pages":[{"title":"Categories","date":"2018-03-15T14:14:46.750Z","path":"categories/index.html","text":""},{"title":"About","date":"2018-03-15T14:16:18.444Z","path":"about/index.html","text":"关于我自己"},{"title":"Tags","date":"2018-03-15T13:28:03.563Z","path":"tags/index.html","text":""}],"posts":[{"title":"springboot(一)：helloworld","date":"2018-03-20T16:00:00.000Z","path":"springboot/1.1-spring-boot-hello-world/","text":"通过本节，你将学会： springboot项目初始化 springboot创建接口 如何访问springboot项目接口 项目创建 使用idea开发，下载地址 打开idea，点击New Project 选择Spring Initializr,点击Next 填写Group、Artifact,点击Next 选择Web,勾选Web,点击Next 选择项目路径,点击Finish 创建Controller在DemoApplication同级下创建HelloWorldController 12345678910111213package com.example.demo;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestControllerpublic class HelloWorldController &#123; @RequestMapping(\"/\") public String helloWorld() &#123; return \"Hello, World!\"; &#125;&#125; 目录结构 启动 使用run或者debug启动项目 默认是8080 (http)端口 访问 http://localhost:8080/ 看到效果 总结该项目在github地址 待续","tags":[{"name":"springboot","slug":"springboot","permalink":"http://chenyuanchn.github.io/tags/springboot/"}],"categories":[{"name":"springboot","slug":"springboot","permalink":"http://chenyuanchn.github.io/categories/springboot/"}]},{"title":"微信小程序开发问题汇总","date":"2018-03-19T16:00:00.000Z","path":"微信小程序/1.1-mini-program-init/","text":"写在前面环境搭建开发都按微信小程序官方文档一步一步来 子页面退回父页面时的数据传递问题 直接设置上一页数据 123456789var pages = getCurrentPages();//获取当前页面栈var currentPage = pages[pages.length - 1];//当前页面var prevPage = pages[pages.length - 2];//上一个页面prevPage.setData(&#123; data: yourData&#125;)//返回上一个页面后可以发现数据已经设置进去了 使用全局变量 12345wx.setStorageSync('data', yourData);//存//返回上一个页面wx.getStorageSync('data');//取 待完善","tags":[{"name":"微信小程序","slug":"微信小程序","permalink":"http://chenyuanchn.github.io/tags/微信小程序/"}],"categories":[{"name":"微信小程序","slug":"微信小程序","permalink":"http://chenyuanchn.github.io/categories/微信小程序/"}]},{"title":"https阿里云申请及服务器nginx配置","date":"2018-03-15T16:00:00.000Z","path":"https/1.1-https-init/","text":"配置解析域名及对应的ip地址设置好域名和对应的ip服务器地址 购买配置证书 选择symantec一个域名免费型 购买后 填写申请人信息 选择dns（dns和文件二选一）申请成功后下载nginx证书（zip里包含xx.pem和xx.key两个文件）把这两个文件放入域名对应的ip服务器的nginx目录下 在nginx的conf文件里配置https默认端口443对应的tomcat端口 nginx相关配置 也可以在default.conf里配置http（默认80端口）对应的tomcat，在ssl.conf里配置https（默认443端口）对应的tomcat","tags":[{"name":"https","slug":"https","permalink":"http://chenyuanchn.github.io/tags/https/"}],"categories":[{"name":"https","slug":"https","permalink":"http://chenyuanchn.github.io/categories/https/"}]},{"title":"cordova安卓插件开发","date":"2018-03-15T16:00:00.000Z","path":"cordova/1.1-cordova-plugin/","text":"之前是有道记录的，而且没有很好的整理，先移过来，后面完善 针对cordova安卓插件的开发，这里给出例子，实现震动和提示两个小功能 plugin.xml内容1234567891011121314151617181920&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;plugin xmlns=\"http://apache.org/cordova/ns/plugins/1.0\" id=\"com.xc.sep\" version=\"0.0.1\"&gt; &lt;name&gt;Sep&lt;/name&gt; &lt;js-module src=\"www/Sep.js\" name=\"Sep\"&gt; &lt;clobbers target=\"Sep\" /&gt; &lt;/js-module&gt; &lt;platform name=\"android\"&gt; &lt;source-file src=\"src/android/Sep.java\" target-dir=\"src/com/xc/sep\" /&gt; &lt;config-file target=\"res/xml/config.xml\" parent=\"/*\"&gt; &lt;feature name=\"Sep\"&gt; &lt;param name=\"android-package\" value=\"com.xc.sep.Sep\"/&gt; &lt;/feature&gt; &lt;/config-file&gt; &lt;config-file target=\"AndroidManifest.xml\" parent=\"/*\"&gt; &lt;uses-permission android:name=\"android.permission.VIBRATE\" /&gt; &lt;/config-file&gt; &lt;/platform&gt;&lt;/plugin&gt; Sep.js内容12345678910111213var exec = require('cordova/exec');var Sep = function() &#123;&#125;;Sep.prototype.showVibration = function(success, error) &#123; exec(success, error, 'Sep', 'showVibration', []);&#125;;Sep.prototype.showToast=function(content,type)&#123; exec(null, null, \"Sep\", \"showToast\", [content,type]);&#125;;var sep = new Sep();module.exports = sep; Sep.java内容1234567891011121314151617181920212223242526272829303132333435363738394041424344454647package com.xc.sep;import org.apache.cordova.CallbackContext;import org.apache.cordova.CordovaInterface;import org.apache.cordova.CordovaPlugin;import org.apache.cordova.CordovaWebView;import org.json.JSONArray;import org.json.JSONException;import android.content.Context;import android.media.AudioManager;import android.os.Vibrator;public class Sep extends CordovaPlugin &#123; public void initialize(CordovaInterface cordova, CordovaWebView webView) &#123; super.initialize(cordova, webView); Context context = this.cordova.getActivity().getApplicationContext(); &#125; @Override public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException &#123; if (\"showVibration\".equals(action)) &#123; showVibration(); callbackContext.success(\"success\"); return true; &#125;else if (\"showToast\".equals(action)) &#123; showToast(args.getString(0), args.getInt(1)); callbackContext.success(\"success\"); return true; &#125; callbackContext.error(\"error 没有该方法\"); return false; &#125; private void showVibration()&#123; CordovaInterface cordova = this.cordova; AudioManager manager = (AudioManager) this.cordova.getActivity().getSystemService(Context.AUDIO_SERVICE); if (manager.getRingerMode() != AudioManager.RINGER_MODE_SILENT) &#123; Vibrator vibrator = (Vibrator) this.cordova.getActivity().getSystemService(Context.VIBRATOR_SERVICE); vibrator.vibrate(1000); &#125; &#125; private void showToast(String text,int type)&#123; CordovaInterface cordova = this.cordova; android.widget.Toast.makeText(cordova.getActivity(), text, type).show(); &#125; &#125; 安装插件add后面是你的插件文件夹路径（本地或github上等） 1cordova plugin add C:\\Users\\Administrator\\Desktop\\Sep js中调用12345678Sep.showVibration(function(message) &#123; alert(\"showVibration :\"+message); &#125;, function(message) &#123; alert(\"showVibration :\"+message); &#125;);Sep.showToast(\"测试提示2秒\",2); 在java调用js的两种方式123PluginResult result = new PluginResult(PluginResult.Status.OK,返回内容);result.setKeepCallback(true);//调用后还能再次使用Callbackcallback.sendPluginResult(result); 12345678910String format = \"cordova.plugins.Easemob.onMessageReadAckReceivedInAndroidCallback(%s);\";JSONArray jSONArray = new JSONArray();packageJSONArray(arg0,jSONArray);final String js = String.format(format, jSONArray);cordova.getActivity().runOnUiThread(new Runnable() &#123; @Override public void run() &#123; webView.loadUrl(\"javascript:\" + js); &#125; &#125;);","tags":[{"name":"cordova","slug":"cordova","permalink":"http://chenyuanchn.github.io/tags/cordova/"}],"categories":[{"name":"cordova","slug":"cordova","permalink":"http://chenyuanchn.github.io/categories/cordova/"}]},{"title":"cordova插件：地图定位和导航","date":"2017-09-25T16:00:00.000Z","path":"cordova/1.2-cordova-plugin-map/","text":"实现功能在手机上实现地图展示和定位信息，并可以添加标记在地图上，点击标记显示详情等。所以地图用web（方便拓展），定位用原生插件（浏览器定位不准确） 地图使用百度或者高德的jsapi，在项目中导入对应的js（都需要申请对应的开发者获取key） 定位 ios使用官方插件：cordova-plugin-geolocation 安卓使用百度定位插件：https://github.com/liangzhenghui/cordova-qdc-baidu-location 安卓使用高德定位插件：https://github.com/tomisacatyet/Cordova-AMap4Locaton 导航https://github.com/huangliop/cordova-baidu-navigator 有空完善","tags":[{"name":"cordova","slug":"cordova","permalink":"http://chenyuanchn.github.io/tags/cordova/"}],"categories":[{"name":"cordova","slug":"cordova","permalink":"http://chenyuanchn.github.io/categories/cordova/"}]},{"title":"ionic3(一)：入门篇","date":"2017-09-12T16:00:00.000Z","path":"ionic/1.1-ionic3-init/","text":"通过本节，你将学会： ionic3项目初始化 ionic3项目在电脑运行 ionic3项目在安卓手机运行 ionic组成 cordova（js调用原生） angular（js框架） ionic自身封装了适应移动端的常用组件和样式 开始 安装nodejs 安装cordova和ionic 1npm install -g cordova ionic 创建项目 1ionic start myApp tabs myApp:项目名 tabs:模板(blank、tabs、sidemenu、super等) 创建完会自动npm install,速度慢的话取消了用cnpm 运行项目（中间有提示更新就一直y确认到底）12cd myAppionic serve 在安卓机子上跑 下载SDK Tools，配置环境变量ANDROID_HOME，并下载好对应android sdk build-tools,sdk platform等 运行以下指令（会自动添加安卓平台）1ionic cordova run android 报错 如果有does not have Api.js这种报错，删了node_modules重新使用npm install，别使用cnpm install 有些情况还是需要科学上网的","tags":[{"name":"ionic3","slug":"ionic3","permalink":"http://chenyuanchn.github.io/tags/ionic3/"}],"categories":[{"name":"ionic","slug":"ionic","permalink":"http://chenyuanchn.github.io/categories/ionic/"}]},{"title":"ionic3(二)：插件篇","date":"2017-09-12T16:00:00.000Z","path":"ionic/1.2-ionic3-plugin/","text":"插件是什么插件就是使用js调用原生的设备 常用插件默认就安装好的插件 cordova-plugin-whitelist:白名单插件，跨域这些都要用到 支付宝插件https://github.com/chenyuanchn/cordova-plugin-alipay 微信插件https://github.com/xu-li/cordova-plugin-wechat 有空完善","tags":[{"name":"ionic3","slug":"ionic3","permalink":"http://chenyuanchn.github.io/tags/ionic3/"}],"categories":[{"name":"ionic","slug":"ionic","permalink":"http://chenyuanchn.github.io/categories/ionic/"}]},{"title":"欢迎来到凸凸的知识库","date":"2016-12-31T16:00:00.000Z","path":"index/","text":"这是凸凸的知识库站点，github地址。","tags":[],"categories":[]}]}